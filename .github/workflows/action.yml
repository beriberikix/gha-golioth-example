name: Build Zephyr application

on:
  push:
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  ZEPHYR_VERSION: ${{ vars.ZEPHYR_VERSION }}
  ZEPHYR_SDK_VERSION: ${{ vars.ZEPHYR_SDK_VERSION }}
  TOOLCHAIN: ${{ vars.TOOLCHAIN }}
  BOARD: ${{ vars.BOARD }}
  NAME: ${{ vars.NAME }}
  GOLIOTH_PROJECT_ID: ${{ vars.GOLIOTH_PROJECT_ID }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install OS dependencies
        run: >
          sudo apt-get install -y
          device-tree-compiler
          git
          ninja-build
          python3
          python3-pip
          python3-wheel
          wget

      - name: Install build tools
        run: |
          pip3 install west
          pip3 install cmake

      - name: Install Python packages
        run: |
          pip3 install -r https://raw.githubusercontent.com/zephyrproject-rtos/zephyr/$ZEPHYR_VERSION/scripts/requirements-base.txt

      - name: Install Zephyr SDK
        run: |
          wget -q "https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v${{ env.ZEPHYR_SDK_VERSION }}/zephyr-sdk-${{ env.ZEPHYR_SDK_VERSION }}_linux-x86_64_minimal.tar.gz"
          mkdir -p /opt/zephyr-sdk
          tar -xvf zephyr-sdk-${{ env.ZEPHYR_SDK_VERSION }}_linux-x86_64_minimal.tar.gz -C /opt/zephyr-sdk --strip-components=1
          /opt/zephyr-sdk/setup.sh -t $TOOLCHAIN

      - name: Set credentials
        uses: DamianReeves/write-file-action@master
        with:
          path: app/prj.conf
          write-mode: append
          contents: |
            CONFIG_GOLIOTH_SYSTEM_CLIENT_PSK_ID="my-psk-id"
            CONFIG_GOLIOTH_SYSTEM_CLIENT_PSK="my-psk"
            CONFIG_GOLIOTH_SAMPLE_WIFI_SSID="my-wifi"
            CONFIG_GOLIOTH_SAMPLE_WIFI_PSK="my-psk"

      - name: Build application
        run: |
          west init -l
          west update
          west zephyr-export
          west blobs fetch hal_espressif
          west update
          west build -b $BOARD app -p

      - name: Upload binary to GitHub
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.NAME }}-binary
          path: build/zephyr/zephyr.bin

  deploy:
    if: ${{ github.event_name != 'pull_request' }}
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install goliothctl
        run: |
          echo "deb [trusted=yes] https://repos.golioth.io/apt/ /" | sudo tee /etc/apt/sources.list.d/golioth.list
          sudo apt update
          sudo apt install goliothctl

      - name: Setup goliothctl
        run: |
          goliothctl login --apiKey ${{ secrets.GOLIOTH_API_KEY }} --projectId ${{ env.GOLIOTH_PROJECT_ID }}

      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.NAME }}-binary

      - name: Get latest release version number
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Upload binary to Golioth (create artifact)
        run: |
          goliothctl dfu artifact create zephyr.bin --version --version ${{ steps.get_version.outputs.version-without-v }}